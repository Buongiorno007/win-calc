section.page-container(ng-class="{ 'swiped': !global.showNavMenu }")
  section.left-side
    include menus/_navigation-menu
  section.right-side
    section.main-content

      section.cart-page

        section.cart-container.full-view
          .cart-header
            include parts/_user-info
            button.cart-tool.additional-elements(ng-click="showAllAddElements()") {{ 'cart.ALL_ADD_ELEMENTS' | translate }}
            button.cart-tool.new-order(ng-click="addNewProductInOrder()") {{ 'cart.ADD_ORDER' | translate }}

          .scroll-hor-container
            .order-block
              .order(ng-repeat="product in global.order.products track by $index")
                button.order-delete(ng-click="clickDeleteProduct($index)")
                .order-header(ng-switch="product.selectedRoomId", ng-click="editProduct($index)")
                  img.order-header-fon(ng-switch-when="1", ng-src="img/rooms-dialog/kitchen.jpg")
                  img.order-header-fon(ng-switch-when="2", ng-src="img/rooms-dialog/livingroom.jpg")
                  img.order-header-fon(ng-switch-when="3", ng-src="img/rooms-dialog/balcony.jpg")
                  img.order-header-fon(ng-switch-when="4", ng-src="img/rooms-dialog/childroom.jpg")
                  img.order-header-fon(ng-switch-when="5", ng-src="img/rooms-dialog/bedroom.jpg")
                  img.order-header-fon(ng-switch-when="6", ng-src="img/rooms-dialog/door.jpg")

                  .order-template
                    svg-template(template="product.templateIcon", template-width="global.svgTemplateIconWidth", template-height="global.svgTemplateIconHeight", type-construction="icon")
                  .order-coeff
                    span.coeff-label {{ 'cart.HEAT_TRANSFER' | translate }}
                    span.coeff-value {{ product.heatTransferTOTAL }}
                .order-content
                  ul.order-list
                    li.order-item
                      .order-value {{ product.templateWidth }} {{ 'mainpage.MM' | translate }}
                      .order-value {{ product.templateHeight }} {{ 'mainpage.MM' | translate }}
                      .order-label {{ 'mainpage.CONFIGMENU_SIZING' | translate }}
                    li.order-item
                      .order-value {{ product.profileName }}
                      .order-label {{ 'mainpage.CONFIGMENU_PROFILE' | translate }}
                    li.order-item
                      .order-value {{ product.glassName }}
                      .order-label {{ 'mainpage.CONFIGMENU_GLASS' | translate }}
                    li.order-item
                      .order-value {{ product.hardwareName }}
                      .order-label {{ 'mainpage.CONFIGMENU_HARDWARE' | translate }}
                    li.order-item
                      .order-label {{ 'mainpage.CONFIGMENU_LAMINATION_TYPE' | translate }}
                      .order-value {{ product.laminationOutName }} / {{ product.laminationInName }}
                      .order-label {{ 'mainpage.CONFIGMENU_LAMINATION' | translate }}
                    li.order-item.addelements-btn(ng-click="showAllAddElementDetail($index)")
                      .order-value(ng-if="cart.allAddElements[$index].length > 4 || cart.allAddElements[$index].length === 0") {{cart.allAddElements[$index].length}} {{ 'add_elements.ELEMENTS' | translate }}
                      .order-value(ng-if="cart.allAddElements[$index].length < 5 && cart.allAddElements[$index].length > 1") {{cart.allAddElements[$index].length}} {{ 'add_elements.ELEMENTA' | translate }}
                      .order-value(ng-if="cart.allAddElements[$index].length === 1") {{cart.allAddElements[$index].length}} {{ 'add_elements.ELEMENT' | translate }}
                      .order-label {{ 'mainpage.CONFIGMENU_ADDITIONAL' | translate }}
                  .order-qty
                    button.order-tool(ng-click="lessProduct($index)") -
                    .order-value {{ product.productQty }}
                    button.order-tool(ng-click="moreProduct($index)") +
                    .order-label.qty-label {{ 'cart.PRODUCT_QTY' | translate }}
                .order-footer(price-fixed="{{product.productPriceTOTAL}}", qty-element="{{product.productQty}}", currency-element="{{global.currency}}")

          button.view-switch-tab(ng-click="viewSwitching()") {{ 'cart.LIGHT_VIEW' | translate }}



        section.cart-container.light-view(ng-class="{'active': isCartLightView}")
          .cart-header
            include parts/_user-info
            button.cart-tool.additional-elements(ng-click="showAllAddElements()") {{ 'cart.ALL_ADD_ELEMENTS' | translate }}
            button.cart-tool.new-order(ng-click="createNewProduct()") {{ 'cart.ADD_ORDER' | translate }}

          .order-block
            .order(ng-repeat="product in global.order.products track by $index")
              button.order-delete(ng-click="deleteProduct($index)")
              .order-header
                .order-template(ng-click="editProduct(product.productId)")
                  svg-template(template="product.templateIcon", template-width="global.svgTemplateIconWidth", template-height="global.svgTemplateIconHeight", type-construction="icon")
              .order-content
                .order-value {{ product.templateWidth }} * {{ product.templateHeight }} {{ 'mainpage.MM' | translate }}

                .order-item.addelements-btn(ng-click="showAllAddElementDetail($index)")
                  .order-value(ng-if="cart.allAddElements[$index].length > 4 || cart.allAddElements[$index].length === 0") {{cart.allAddElements[$index].length}} {{ 'add_elements.ELEMENTS' | translate }}
                  .order-value(ng-if="cart.allAddElements[$index].length < 5 && cart.allAddElements[$index].length > 1") {{cart.allAddElements[$index].length}} {{ 'add_elements.ELEMENTA' | translate }}
                  .order-value(ng-if="cart.allAddElements[$index].length === 1") {{cart.allAddElements[$index].length}} {{ 'add_elements.ELEMENT' | translate }}
                  .order-label {{ 'mainpage.CONFIGMENU_ADDITIONAL' | translate }}

                .order-qty
                  button.order-tool(ng-click="lessProduct($index)") -
                  .order-value {{ product.productQty }}
                  button.order-tool(ng-click="moreProduct($index)") +
                .order-label {{ 'cart.PRODUCT_QTY' | translate }}
              .order-footer(price-fixed="{{product.productPriceTOTAL}}", qty-element="{{product.productQty}}", currency-element="{{global.currency}}")



          button.view-switch-tab(ng-click="viewSwitching()") {{ 'cart.FULL_VIEW' | translate }}


        .addelements-detail(ng-if="cart.isAddElementDetail")
          .addelements-detail-header
            .addelements-detail-tools
              button.addelements-detail-edit(ng-click="editProduct(cart.activeProductIndex)") {{ 'cart.ADDELEMENTS_EDIT_LIST' | translate }}
              button.addelements-detail-close(ng-click="closeAllAddElementDetail()")
            .product-template
              .addelements-detail-row
                .product-value
                  .product-icon-thumb
                    svg-template(template="global.order.products[cart.activeProductIndex].templateIcon", template-width="global.svgTemplateIconWidth", template-height="global.svgTemplateIconHeight", type-construction="icon")
                  span.product-template-qty X {{ global.order.products[cart.activeProductIndex].productQty }}
                .product-icon-label {{ 'cart.PRODUCT_QTY' | translate }}
              .addelements-detail-row
                .product-value {{ global.order.products[cart.activeProductIndex].templateWidth }} {{ 'mainpage.MM' | translate }} *
                .product-label {{ 'add_elements.WIDTH_LABEL' | translate }}
              .addelements-detail-row
                .product-value {{ global.order.products[cart.activeProductIndex].templateHeight }} {{ 'mainpage.MM' | translate }}
                .product-label {{ 'add_elements.HEIGHT_LABEL' | translate }}
          .addelements-detail-content
            ul.addelements-detail-list
              li.addelements-detail-item(ng-repeat="addelement in cart.allAddElements[cart.activeProductIndex] track by $index", ng-switch="addelement.elementType")
                .product-value {{ addelement.elementName }}
                .product-value(ng-switch-when="1") {{ 'add_elements.GRID' | translate }}
                .product-value(ng-switch-when="2") {{ 'add_elements.VISOR' | translate }}
                .product-value(ng-switch-when="3") {{ 'add_elements.SPILLWAY' | translate }}
                .product-value(ng-switch-when="4") {{ 'add_elements.OUTSIDE' | translate }}
                .product-value(ng-switch-when="5") {{ 'add_elements.LOUVERS' | translate }}
                .product-value(ng-switch-when="6") {{ 'add_elements.INSIDE' | translate }}
                .product-value(ng-switch-when="7") {{ 'add_elements.CONNECTORS' | translate }}
                .product-value(ng-switch-when="8") {{ 'add_elements.FAN' | translate }}
                .product-value(ng-switch-when="9") {{ 'add_elements.WINDOWSILL' | translate }}
                .product-value(ng-switch-when="10") {{ 'add_elements.HANDLEL' | translate }}
                .product-value(ng-switch-when="11") {{ 'add_elements.OTHERS' | translate }}
                .addelement-parameters
                  .addelement-parameter(ng-show="addelement.elementWidth")
                    .addelement-value {{ addelement.elementWidth }}
                    .addelement-label {{ 'add_elements.WIDTH_LABEL' | translate }}
                  .addelement-parameter(ng-show="addelement.elementHeight")
                    .addelement-value {{ addelement.elementHeight }}
                    .addelement-label {{ 'add_elements.HEIGHT_LABEL' | translate }}
                  .addelement-parameter(ng-show="addelement.elementColor")
                    .addelement-value
                      img(ng-src="{{ addelement.elementColor }}")
                    .addelement-label {{ 'add_elements.COLOR_LABEL' | translate }}
                  .addelement-parameter(ng-show="addelement.elementQty")
                    .addelement-value {{ addelement.elementQty * global.order.products[cart.activeProductIndex].productQty}}
                    .addelement-label {{ 'add_elements.QTY_LABEL' | translate }}
                .addelement-parameters
                  .addelement-price-value + {{ addelement.elementQty * global.order.products[cart.activeProductIndex].productQty * addelement.elementPrice }} {{ global.currency }}
                  .addelement-label ({{ addelement.elementQty * global.order.products[cart.activeProductIndex].productQty}} x {{ addelement.elementPrice }}{{ global.currency }})
            .addelements-detail-row.price-one-product
              .addelement-price-value(price-fixed="{{global.order.products[cart.activeProductIndex].addElementsPriceSELECT}}", qty-element="1", currency-element="{{global.currency}}")
              .product-label {{ 'cart.ADDELEMENTS_PRODUCT_COST' | translate }}
          .addelements-detail-footer
            span(price-fixed="{{global.order.products[cart.activeProductIndex].addElementsPriceSELECT}}", qty-element="{{global.order.products[cart.activeProductIndex].productQty}}", currency-element="{{global.currency}}")
            span &#8721;

        .backDarkView(ng-if="cart.isAddElementDetail", ng-click="closeAllAddElementDetail()")



        section.cart-container.alladdelements-view(ng-class="{'active': cart.isShowAllAddElements}")
          .alladdelements-header
            button.close-alladdelements(ng-click="showAllAddElements()")
          .alladdelements-block

            // List Grids
            .aux-list-block.aux_color_connect(ng-if="cart.addElementsUniqueList.grids.length > 0")
              .aux-list-block-title {{ 'add_elements.GRIDS' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.grids track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_connect_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")


            // List Visors
            .aux-list-block.aux_color_big(ng-if="cart.addElementsUniqueList.visors.length > 0")
              .aux-list-block-title {{ 'add_elements.VISORS' | translate }}

              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.visors track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_big_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                    .aux-params
                      .aux-params-but {{ elementUnit.elementWidth }}
                      .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")


            // List Spillways
            .aux-list-block.aux_color_middle(ng-if="cart.addElementsUniqueList.spillways.length > 0")
              .aux-list-block-title {{ 'add_elements.SPILLWAYS' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.spillways track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_middle_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                    .aux-params
                      .aux-params-but {{ elementUnit.elementWidth }}
                      .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")



            // List OutsideSlope
            .aux-list-block.aux_color_slope(ng-if="cart.addElementsUniqueList.outsideSlope.length > 0")
              .aux-list-block-title {{ 'add_elements.OUTSIDE' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.outsideSlope track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_slope_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                    .aux-params
                      .aux-params-but {{ elementUnit.elementWidth }}
                      .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")


            // List Louvers
            .aux-list-block.aux_color_middle(ng-if="cart.addElementsUniqueList.louvers.length > 0")
              .aux-list-block-title {{ 'add_elements.LOUVERS' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.louvers track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_middle_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                    .aux-params
                      .aux-params-but {{ elementUnit.elementWidth }}
                      .aux-label {{ 'add_elements.WIDTH_LABEL' | translate }}
                  td.aux-tablecell-height
                    .aux-params
                      .aux-params-but {{ elementUnit.elementWidth }}
                      .aux-label {{ 'add_elements.HEIGHT_LABEL' | translate }}
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")


            // List InsideSlope
            .aux-list-block.aux_color_slope(ng-if="cart.addElementsUniqueList.insideSlope.length > 0")
              .aux-list-block-title {{ 'add_elements.INSIDE' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.insideSlope track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_slope_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ cart.typing }}", typing-delay="{{ cart.DELAY_START }}")
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                    .aux-params
                      .aux-params-but {{ elementUnit.elementWidth }}
                      .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")


            // List Connectors
            .aux-list-block.aux_color_connect(ng-if="cart.addElementsUniqueList.connectors.length > 0")
              .aux-list-block-title(data-output="{{ 'add_elements.CONNECTORS' | translate }}", typing="{{ cart.typing }}", typing-delay="{{ cart.DELAY_START }}")
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.connectors track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_connect_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                    .aux-params
                      .aux-params-but {{ elementUnit.elementWidth }}
                      .aux-label {{ 'add_elements.WIDTH_LABEL' | translate }}
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")


            // List Fans
            .aux-list-block.aux_color_small(ng-if="cart.addElementsUniqueList.fans.length > 0")
              .aux-list-block-title {{ 'add_elements.FAN' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.fans track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_small_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")


            // List WindowSill
            .aux-list-block.aux_color_big(ng-if="cart.addElementsUniqueList.windowSill.length > 0")
              .aux-list-block-title {{ 'add_elements.WINDOWSILLS' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.windowSill track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_big_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                    .aux-params
                      .aux-params-but {{ elementUnit.elementWidth }}
                      .aux-label {{ 'add_elements.WIDTH_LABEL' | translate }}
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                    .aux-params
                      button.aux-color
                        img(ng-src="{{ elementUnit.elementColor }}")
                      .aux-label {{ 'add_elements.COLOR_LABEL' | translate }}
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")



            // List Handles
            .aux-list-block.aux_color_middle(ng-if="cart.addElementsUniqueList.handles.length > 0")
              .aux-list-block-title {{ 'add_elements.HANDLELS' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.handles track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_middle_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")



            // List Others
            .aux-list-block.aux_color_middle(ng-if="cart.addElementsUniqueList.others.length > 0")
              .aux-list-block-title {{ 'add_elements.OTHERS' | translate }}
              table.aux-list-addellement
                tr.aux-list-row(ng-repeat="elementUnit in cart.addElementsUniqueList.others track by $index")
                  td.aux-tablecell-name
                    .aux-name
                      button.aux-params-but.aux_small_but.aux-title(ng-class="{'selected': elementUnit.elementId === cart.selectedAddElementUnit}", ng-click="showAddElementUnitDetail(elementUnit.elementType, elementUnit.elementId)") {{ elementUnit.elementName }}
                      .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
                  td.aux-tablecell-qty
                    .aux-params
                      .aux-params-but {{ elementUnit.elementQty }}
                      .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
                  td.aux-tablecell-width
                  td.aux-tablecell-height
                  td.aux-tablecell-color
                  td.aux-tablecell-price
                    .aux-price + {{ elementUnit.elementQty * elementUnit.elementPrice }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAddElementList(elementUnit.elementType, elementUnit.elementId)")

            //----- TOTAL
            .aux-list-block(ng-if="cart.addElementsListPriceTOTAL")
              table.aux-list-addellement
                tr.aux-list-row
                  td.aux-tablecell-total
                    .aux-total-label {{ 'add_elements.TOTAL_PRICE_TXT' | translate }}
                  td.aux-tablecell-price
                    .aux-total-price {{ cart.addElementsListPriceTOTAL }} {{ global.currency }}
                  td.aux-tablecell-delete
                    .aux-delete(ng-click="deleteAllAddElementsList()")










        section.cart-container.addelement-view(ng-class="{'active': cart.isShowAddElementUnit}")
          .alladdelements-header
            button.close-alladdelements(ng-click="showAddElementUnitDetail()")
          .alladdelements-block




    section.right-menu
      include menus/_cart-menu

    include parts/_call-master
    include parts/_call-order
    include parts/_call-credit
.config-panel.glass-container(ng-controller="GlassesCtrl as glassPanel", ng-class="{'active': glassPanel.G.global.activePanel == 3}")
  .panel-inner(ng-if="glassPanel.G.global.activePanel == 3")
    .glass-block(ng-repeat="typeGlass in glassPanel.G.global.glasses", ng-class="{'selected': glassPanel.P.product.glassTypeIndex == $index}")

      .group-block-header
        .title(data-output="{{ glassPanel.G.global.glassTypes[$index].name }}", typing="{{ glassPanel.config.typing }}", typing-delay="{{ glassPanel.config.DELAY_START }}")
        .group-info
          .info(ng-if="glassPanel.G.global.glassTypes[$index].img.length || glassPanel.G.global.glassTypes[$index].link.length || glassPanel.G.global.glassTypes[$index].description.length", hm-tap="glassPanel.showInfoBox(glassPanel.G.global.glassTypes[$index].id, glassPanel.G.global.glassTypes)")

      .glass-block-footer.clearfix
        .footer-inner
          .box.glass-box.unvisible(ng-repeat="glass in typeGlass", ng-class="{'selected': glass.id == glassPanel.G.global.selectLastGlassId }", show-delay="{{ glassPanel.config.DELAY_START + (glassPanel.config.DELAY_BLOCK * $index) }}")
            .box_inner(hm-tap="glassPanel.selectGlass(glass.id, glass.sku)")
              .glass-box-view
                .glass-img(ng-switch="glass.cameras")
                  img(ng-switch-when="1", ng-if="glass.glass_folder_id !== 6", ng-src="img/glasses/glass1.png")
                  img(ng-switch-when="2", ng-if="glass.glass_folder_id !== 6", ng-src="img/glasses/glass2.png")
                  img(ng-switch-when="1", ng-if="glass.glass_folder_id === 6", ng-src="img/glasses/glass10.png")
                  img(ng-switch-when="2", ng-if="glass.glass_folder_id === 6", ng-src="img/glasses/glass20.png")
                .label {{ glass.cameras }}
                  ng-pluralize(count="glass.cameras",
                  when="{'1':'{{ glassPanel.config.camera }}', '2':'{{ glassPanel.config.camer }}', '3':'{{ glassPanel.config.camer }}', '4':'{{ glassPanel.config.camer }}', 'other':'{{ glassPanel.config.camers }}'}")
                  span(ng-if="glass.glass_folder_id === 6") {{ 'panels.ENERGY_SAVE' | translate }}
              .glass-box-data
                .glass-descr(data-output="{{ glass.sku }}", typing="{{ glassPanel.config.typing }}", typing-delay="{{ glassPanel.config.DELAY_START + (glassPanel.config.DELAY_TYPING * $index) }}")
                .coef-level.heat-insulation(ng-class="{'coef-level-1': glass.heat_coeff == 1, 'coef-level-2': glass.heat_coeff == 2, 'coef-level-3': glass.heat_coeff == 3, 'coef-level-4': glass.heat_coeff == 4}")
                  .coef-index
                  .coef-index
                  .coef-index
                  .coef-index
                  .coef-index
                .label(data-output="{{ 'panels.HEAT_INSULATION' | translate }}", typing="{{ glassPanel.config.typing }}", typing-delay="{{ glassPanel.config.DELAY_START + (glassPanel.config.DELAY_TYPING * $index) }}")
                .coef-level.noise-insulation(ng-class="{'coef-level-1': glass.noise_coeff == 1, 'coef-level-2': glass.noise_coeff == 2, 'coef-level-3': glass.noise_coeff == 3, 'coef-level-4': glass.noise_coeff == 4}")
                  .coef-index
                  .coef-index
                  .coef-index
                  .coef-index
                  .coef-index
                .label(data-output="{{ 'panels.NOICE_INSULATION' | translate }}", typing="{{ glassPanel.config.typing }}", typing-delay="{{ glassPanel.config.DELAY_START + (glassPanel.config.DELAY_TYPING * $index) }}")
            .info(ng-if="glass.img.length || glass.link.length || glass.description.length", hm-tap="glassPanel.showInfoBox(glass.id, typeGlass)")

  .glass-selector-dialog(ng-class="{'active': glassPanel.G.global.showGlassSelectorDialog}")
    .dialog-inner
      svg-template(template="glassPanel.P.product.template", template-width="glassPanel.constants.svgTemplateIconBigWidth", template-height="glassPanel.constants.svgTemplateIconBigHeight", type-construction="setGlass")
    .set-glass-btn(hm-tap="glassPanel.confirmGlass()")
    .set-glass-all-btn(hm-tap="glassPanel.setGlassToAll()") {{ 'mainpage.SELECT_ALL' | translate }}
    .set-glass-warning {{ 'mainpage.SELECT_GLASS_WARN' | translate }}
    .close-dialog(hm-tap="glassPanel.closeGlassSelectorDialog()")
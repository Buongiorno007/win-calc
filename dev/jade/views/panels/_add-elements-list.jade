.config-panel.additional-list-container(ng-controller="AddElementsListCtrl", ng-class="{'active': global.isAddElementListView}")

  include ../parts/_search-block

  .aux-search-content(ng-class="{'active': addElementsList.showAddElementGroups}")
    ul.aux-list-groups
      li.aux-list-group(ng-repeat="typeAddElement in addElementsList.filteredGroups", hm-tap="global.selectAddElement(typeAddElement.groupId)", class="{{ typeAddElement.groupClass }}", ng-class="{'selected': global.isFocusedAddElement == typeAddElement.groupId}") {{ typeAddElement.groupName }}
        button.group-indicator(ng-class="{'active': global.isFocusedAddElement == typeAddElement.groupId}")
        .search-elements-block


      //li.aux-list-group.aux_color_big(data-output="") {{ 'add_elements.VISORS' | translate }}
        button.group-indicator
        .search-elements-block
          button.search-element KO-350
          button.search-element KO-350
          button.search-element KO-350
          button.search-element KO-350
          button.search-element KO-350-258-000
          button.search-element KO-350
          button.search-element KO-350
          button.search-element KO-350
          button.search-element KO-350
          button.search-element KO-350
          button.search-element KO-350
          button.search-element KO-350


  .aux-list-content

    // List Grids
    .aux-list-block.aux_color_connect(ng-if="global.product.chosenAddElements.selectedGrids.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.GRIDS' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedGrids track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(1)") )
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '1-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_connect_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(1, $index)")


    // List Visors
    .aux-list-block.aux_color_big(ng-if="global.product.chosenAddElements.selectedVisors.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.VISORS' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")

      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedVisors track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(2)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '2-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_big_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
            .aux-params(ng-class="{'selected': global.auxParameter === '2-2-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_big_but(hm-tap="global.initAddElementMenuTools(2, $index)", ng-disabled="global.isSizeCalculator") {{ addElement.elementWidth }}
              .aux-label(data-output="{{ 'add_elements.SIZE_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(2, $index)")


    // List Spillways
    .aux-list-block.aux_color_middle(ng-if="global.product.chosenAddElements.selectedSpillways.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.SPILLWAYS' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedSpillways track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(3)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '3-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_middle_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
            .aux-params(ng-class="{'selected': global.auxParameter === '3-2-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_middle_but(hm-tap="global.initAddElementMenuTools(2, $index)", ng-disabled="global.isSizeCalculator") {{ addElement.elementWidth }}
              .aux-label(data-output="{{ 'add_elements.SIZE_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(3, $index)")



    // List OutsideSlope
    .aux-list-block.aux_color_slope(ng-if="global.product.chosenAddElements.selectedOutsideSlope.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.OUTSIDE' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedOutsideSlope track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(4)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '4-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_slope_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
            .aux-params(ng-class="{'selected': global.auxParameter === '4-2-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_slope_but(hm-tap="global.initAddElementMenuTools(2, $index)", ng-disabled="global.isSizeCalculator") {{ addElement.elementWidth }}
              .aux-label(data-output="{{ 'add_elements.SIZE_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(4, $index)")


    // List Louvers
    .aux-list-block.aux_color_middle(ng-if="global.product.chosenAddElements.selectedLouvers.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.LOUVERS' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedLouvers track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(5)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '5-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_middle_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
            .aux-params(ng-class="{'selected': global.auxParameter === '5-2-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_middle_but(hm-tap="global.initAddElementMenuTools(2, $index)", ng-disabled="global.isSizeCalculator") {{ addElement.elementWidth }}
              .aux-label(data-output="{{ 'add_elements.WIDTH_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-height
            .aux-params(ng-class="{'selected': global.auxParameter === '5-3-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_middle_but(hm-tap="global.initAddElementMenuTools(3, $index)", ng-disabled="global.isSizeCalculator") {{ addElement.elementWidth }}
              .aux-label(data-output="{{ 'add_elements.HEIGHT_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(5, $index)")


    // List InsideSlope
    .aux-list-block.aux_color_slope(ng-if="global.product.chosenAddElements.selectedInsideSlope.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.INSIDE' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedInsideSlope track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(6)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '6-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_slope_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
            .aux-params(ng-class="{'selected': global.auxParameter === '6-2-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_slope_but(hm-tap="global.initAddElementMenuTools(2, $index)", ng-disabled="global.isSizeCalculator") {{ addElement.elementWidth }}
              .aux-label(data-output="{{ 'add_elements.SIZE_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(6, $index)")


    // List Connectors
    .aux-list-block.aux_color_connect(ng-if="global.product.chosenAddElements.selectedConnectors.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.CONNECTORS' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedConnectors track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(7)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '7-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_connect_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
            .aux-params(ng-class="{'selected': global.auxParameter === '7-2-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_connect_but(hm-tap="global.initAddElementMenuTools(2, $index)", ng-disabled="global.isSizeCalculator") {{ addElement.elementWidth }}
              .aux-label(data-output="{{ 'add_elements.WIDTH_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(7, $index)")


    // List Fans
    .aux-list-block.aux_color_small(ng-if="global.product.chosenAddElements.selectedFans.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.FAN' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedFans track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(8)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '8-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_small_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(8, $index)")


    // List WindowSill
    .aux-list-block.aux_color_big(ng-if="global.product.chosenAddElements.selectedWindowSill.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.WINDOWSILLS' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedWindowSill track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(9)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '9-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_big_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
            .aux-params(ng-class="{'selected': global.auxParameter === '9-2-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_big_but(hm-tap="global.initAddElementMenuTools(2, $index)", ng-disabled="global.isSizeCalculator") {{ addElement.elementWidth }}
              .aux-label(data-output="{{ 'add_elements.WIDTH_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-height
          td.aux-tablecell-color
            .aux-params
              button.aux-color(ng-class="{'selected': global.auxParameter === '9-4-'+$index && global.currentAddElementId === $index}", hm-tap="global.initAddElementMenuTools(4, $index)")
                img(ng-src="{{ addElement.elementColor }}")
              .aux-label {{ 'add_elements.COLOR_LABEL' | translate }}
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(9, $index)")



    // List Handles
    .aux-list-block.aux_color_middle(ng-if="global.product.chosenAddElements.selectedHandles.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.HANDLELS' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedHandles track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(10)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '10-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_middle_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(10, $index)")



    // List Others
    .aux-list-block.aux_color_middle(ng-if="global.product.chosenAddElements.selectedOthers.length > 0")
      .aux-list-block-title(data-output="{{ 'add_elements.OTHERS' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
      table.aux-list-addellement
        tr.aux-list-row(ng-repeat="addElement in global.product.chosenAddElements.selectedOthers track by $index")
          td.aux-tablecell-name
            .aux-name
              .aux-title(data-output="{{ addElement.elementName }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}", hm-tap="global.selectAddElement(11)")
              .aux-label(data-output="{{ 'add_elements.NAME_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-qty
            .aux-params(ng-class="{'selected': global.auxParameter === '10-1-'+$index && global.currentAddElementId === $index}")
              button.aux-params-but.aux_small_but(hm-tap="global.initAddElementMenuTools(1, $index)", ng-disabled="global.isQtyCalculator") {{ addElement.elementQty }}
              .aux-label(data-output="{{ 'add_elements.QTY_LABEL' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-width
          td.aux-tablecell-height
          td.aux-tablecell-color
          td.aux-tablecell-price
            .aux-price + {{ addElement.elementPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="global.deleteAddElement(11, $index)")



    .aux-list-block(ng-if="global.totalAddElementsPrice")
      table.aux-list-addellement
        tr.aux-list-row
          td.aux-tablecell-total
            .aux-total-label(data-output="{{ 'add_elements.TOTAL_PRICE_TXT' | translate }}", typing="{{ addElementsList.typing }}", typing-delay="{{ addElementsList.DELAY_START }}")
          td.aux-tablecell-price
            .aux-total-price {{ global.totalAddElementsPrice }} {{ global.currency }}
          td.aux-tablecell-delete
            .aux-delete(hm-tap="clearAllAddElements()")

  button.view-switch-tab(hm-tap="viewSwitching()") {{ 'add_elements.SCHEME_VIEW' | translate }}

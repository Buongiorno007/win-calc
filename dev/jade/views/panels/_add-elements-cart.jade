//------- All AddElements Panel
section.cart-container.alladdelements-view(ng-controller="AddElemCartCtrl as elemCartPanel", ng-class="{'active': cartPage.C.cart.isAllAddElems}")
  .alladdelements-header
    button.close-alladdelements(fs-click="elemCartPanel.closeAllAddElemsPanel()")
    div(ng-if="cartPage.C.cart.selectedProduct !== -1")
      include ../parts/_search-block

    include ../parts/_addelems-group-menu

  .alladdelements-block

    .aux-list-block(ng-repeat="elemType in elemCartPanel.config.addElementDATA track by $index", ng-class="elemCartPanel.config.addElementDATA[$index].typeClass + '-theme'")
      .aux-block-inner(ng-if="(cartPage.C.cart.allAddElemsOrder | filter: {list_group_id: elemType.id}).length && elemType.mainTypeMenu")
        .aux-list-block-title {{ elemCartPanel.config.addElementDATA[$index].name | translate }}

        table.aux-list-addellement
          tr.aux-list-row(ng-repeat="addElem in cartPage.C.cart.allAddElemsOrder | filter: {list_group_id: elemType.id} track by $index")
            td.aux-tablecell-name
              .aux-name
                button.aux-params-but.aux_connect_but.aux-title(ng-class="{'selected': addElem.id === elemCartPanel.config.selectedAddElemUnit.id}", fs-click="elemCartPanel.showAddElemUnitDetail(addElem)") {{ addElem.name }}
                .aux-label {{ ::cartPage.NAME_LABEL }}
            td.aux-tablecell-qty
              .aux-params(ng-show="addElem.element_qty", ng-click="elemCartPanel.editQty($index, addElem, cartPage.C.cart.allAddElemsOrder)")
                .aux-params-but {{ addElem.element_qty }}
                .aux-label {{ ::cartPage.QTY_LABEL }}
            td.aux-tablecell-width
              .aux-params(ng-show="addElem.element_width", ng-click="elemCartPanel.editWidth($index, addElem, cartPage.C.cart.allAddElemsOrder)")
                .aux-params-but {{ addElem.element_width }}
                .aux-label {{ ::cartPage.WIDTH_LABEL }}
            td.aux-tablecell-height
              .aux-params(ng-show="addElem.element_height", ng-click="elemCartPanel.editHeight($index, addElem, cartPage.C.cart.allAddElemsOrder)")
                .aux-params-but {{ addElem.element_height }}
                .aux-label {{ ::cartPage.HEIGHT_LABEL }}
            td.aux-tablecell-price
              .aux-price + {{ addElem.element_qty * addElem.elementPriceDis }} {{ cartPage.U.userInfo.currency }}
            td.aux-tablecell-delete
              .aux-delete(fs-click="elemCartPanel.deleteAddElemsItem(addElem)")


    //----- TOTAL
    .aux-list-block
      table.aux-list-addellement
        tr.aux-list-row
          td.aux-tablecell-total
            .aux-total-label {{ ::cartPage.TOTAL_PRICE_TXT }}
          td.aux-tablecell-price
            .aux-total-price {{ cartPage.C.cart.addElemsOrderPriceTOTAL }} {{ cartPage.U.userInfo.currency }}
          td.aux-tablecell-delete
            .aux-delete(fs-click="elemCartPanel.deleteAllAddElems()")


  .products-selector
    .products-selector-block(ng-class="{'active': elemCartPanel.config.isSwipeProdSelector}", ng-swipe-up="elemCartPanel.swipeProductSelector()", ng-swipe-down="elemCartPanel.swipeProductSelector()")

      .products-block
        .product(ng-repeat="product in cartPage.O.order.products track by $index", ng-class="{'selected': cartPage.C.cart.selectedProduct === $index}", fs-click="elemCartPanel.selectProductToAddElem($index)")
          .select-mark
          .product-header
            svg-template(template="product.templateIcon", template-width="cartPage.constants.svgTemplateIconWidth", template-height="cartPage.constants.svgTemplateIconHeight", type-construction="cartPage.constants.SVG_CLASS_ICON")
            .order-value(ng-hide="product.is_addelem_only") X {{ product.product_qty }}
          .order-content
            .order-item
              .order-value {{ product.template_width }} {{ ::cartPage.MM }}
              .order-value {{ product.template_height }} {{ ::cartPage.MM }}
              .order-label {{ ::cartPage.CONFIGMENU_SIZING }}
            .order-item
              .order-value {{ product.profile.name }}
              .order-label {{ ::cartPage.CONFIGMENU_PROFILE }}
            .order-item
              .order-value {{ product.glass[0].sku }}
              .order-label {{ ::cartPage.CONFIGMENU_GLASS }}
            .order-item
              .order-value {{ product.hardware.name }}
              .order-label {{ ::cartPage.CONFIGMENU_HARDWARE }}
            .order-item
              .order-label {{ ::cartPage.CONFIGMENU_LAMINATION_TYPE }}
              .order-value
                span(ng-if="product.lamination.lamination_out_id > 1") {{ product.lamination.laminat_out_name }}
                span(ng-if="product.lamination.lamination_out_id === 1") {{ product.lamination.laminat_out_name |translate }}
                span /
                span(ng-if="product.lamination.lamination_in_id > 1") {{ product.lamination.laminat_in_name }}
                span(ng-if="product.lamination.lamination_in_id === 1") {{ product.lamination.laminat_in_name |translate }}
              .order-label {{ ::cartPage.CONFIGMENU_LAMINATION }}
            .order-item.addelements-btn
              .order-value {{cartPage.C.cart.allAddElements[$index].length}}
                ng-pluralize(count="cartPage.C.cart.allAddElements[$index].length",
                when="{'0': '{{ cartPage.config.elements }}', '1': '{{ cartPage.config.element }}', '2': '{{ cartPage.config.elementa }}', '3': '{{ cartPage.config.elementa }}', '4': '{{ cartPage.config.elementa }}', 'other': '{{ cartPage.config.elements }}'}")
              .order-label {{ ::cartPage.CONFIGMENU_ADDITIONAL }}
          .order-footer(price-fixed="{{product.productPriceDis}}", qty-element="{{product.product_qty}}", currency-element="{{cartPage.U.userInfo.currency}}")





  //------- Selected AddElement Unit Panel
  section.cart-container.addelement-view(ng-class="{'active': elemCartPanel.config.isAddElemUnitDetail}")
    .addelementunique-header
      button.close-alladdelements(fs-click="elemCartPanel.closeAddElemUnitDetail()")
      .addelementunit-header-fon

      table.aux-list-addellement
        tr.aux-list-row
          td.aux-tablecell-name
            .aux-name
              .aux-title {{ elemCartPanel.config.selectedAddElemUnit.name }}
              .aux-label {{ ::cartPage.NAME_LABEL }}
          td.aux-tablecell-qty
            .aux-params(ng-show="elemCartPanel.config.selectedAddElemUnit.element_qty")
              .aux-params-but {{elemCartPanel.config.selectedAddElemUnit.element_qty }}
              .aux-label {{ ::cartPage.QTY_LABEL }}
          td.aux-tablecell-width
            .aux-params(ng-show="elemCartPanel.config.selectedAddElemUnit.element_width")
              .aux-params-but {{elemCartPanel.config.selectedAddElemUnit.element_width }}
              .aux-label {{ ::cartPage.WIDTH_LABEL }}
          td.aux-tablecell-height
            .aux-params(ng-show="elemCartPanel.config.selectedAddElemUnit.element_height")
              .aux-params-but {{elemCartPanel.config.selectedAddElemUnit.element_height }}
              .aux-label {{ ::cartPage.HEIGHT_LABEL }}
          td.aux-tablecell-price
            .aux-price + {{ elemCartPanel.config.selectedAddElemUnit.element_qty * elemCartPanel.config.selectedAddElemUnit.elementPriceDis }} {{ cartPage.U.userInfo.currency }}
          td.aux-tablecell-delete
            .aux-delete(fs-click="elemCartPanel.deleteAddElemsItem(elemCartPanel.config.selectedAddElemUnit)")

    .addelementunits-container

      .addelementunit-block
        .addelementunit(ng-repeat="addElemUnit in elemCartPanel.config.addElemUnitProducts track by $index", ng-if="!addElemUnit.is_addelem_only && !addElemUnit.length")
          button.addelementunit-delete(fs-click="elemCartPanel.deleteAddElemUnit(addElemUnit.productIndex)")
          .addelementunit-header
            .addelementunit-template
              svg-template(template="cartPage.O.order.products[addElemUnit.productIndex].templateIcon", template-width="cartPage.constants.svgTemplateIconWidth", template-height="cartPage.constants.svgTemplateIconHeight", type-construction="cartPage.constants.SVG_CLASS_ICON")
          .addelementunit-content
            .addelementunit-value {{ cartPage.O.order.products[addElemUnit.productIndex].template_width }} * {{ cartPage.O.order.products[addElemUnit.productIndex].template_height }} {{ ::cartPage.MM }}
          .addelementunit-footer {{ addElemUnit.element_qty }} {{ ::cartPage.QTY_LABEL }}


      .addelementunit-train(ng-repeat="addElemUnit in elemCartPanel.config.addElemUnitProducts track by $index", ng-if="addElemUnit.length > 0")
        .addelementunit-train-inner
          .addelementunit(ng-repeat="addElemWagon in addElemUnit track by $index", ng-class="{'unit-last': $last}")
            .addelementunit-link.link-right(fs-click="elemCartPanel.toggleExplodeLinkMenu($index, $event)")
            button.addelementunit-delete(fs-click="elemCartPanel.deleteAddElemUnit(addElemUnit, 1)")
            .addelementunit-header
              .addelementunit-template
                svg-template(template="cartPage.O.order.products[addElemWagon.productIndex].templateIcon", template-width="cartPage.constants.svgTemplateIconWidth", template-height="cartPage.constants.svgTemplateIconHeight", type-construction="cartPage.constants.SVG_CLASS_ICON")
            .addelementunit-content
              .addelementunit-value {{ cartPage.O.order.products[addElemWagon.productIndex].template_width }} * {{ cartPage.O.order.products[addElemWagon.productIndex].template_height }} {{ ::cartPage.MM }}
            .addelementunit-footer {{ addElemWagon.element_qty }} {{ ::cartPage.QTY_LABEL }}

        .link-explode-menu(ng-show="elemCartPanel.config.isLinkExplodeMenu", ng-style="{'top': elemCartPanel.config.explodeMenuTop+'px', 'left': elemCartPanel.config.explodeMenuLeft+'px'}")
          ul.link-explode-list
            li.link-explode-item(fs-click="elemCartPanel.explodeUnitToProduct(addElemUnit)") {{ ::cartPage.LINK_BETWEEN_COUPLE }}
            li.link-explode-item(fs-click="elemCartPanel.explodeUnitToProduct(addElemUnit, 1)") {{ ::cartPage.LINK_BETWEEN_ALL }}


      .addelementunit-only(ng-repeat="addElemUnit in elemCartPanel.config.addElemUnitProducts track by $index", ng-if="addElemUnit.is_addelem_only")
        table.aux-list-addellement
          tr.aux-list-row
            td.aux-tablecell-name
              .aux-name
                button.aux-params-but.aux_big_but.aux-title {{ addElemUnit.name }}
                .aux-label {{ ::cartPage.NAME_LABEL }}
            td.aux-tablecell-qty
              .aux-params
                .aux-params-but {{ addElemUnit.element_qty }}
                .aux-label {{ ::cartPage.QTY_LABEL }}
            td.aux-tablecell-width
              .aux-params(ng-if="addElemUnit.element_width")
                .aux-params-but {{ addElemUnit.element_width }}
                .aux-label {{ ::cartPage.WIDTH_LABEL }}
            td.aux-tablecell-height
              .aux-params(ng-if="addElemUnit.element_height")
                .aux-params-but {{ addElemUnit.element_height }}
                .aux-label {{ ::cartPage.HEIGHT_LABEL }}
            td.aux-tablecell-price
              .aux-price + {{ addElemUnit.element_qty * addElemUnit.elementPriceDis }} {{ cartPage.U.userInfo.currency }}
            td.aux-tablecell-delete
              .aux-delete(fs-click="elemCartPanel.deleteAddElemUnit(addElemUnit.productIndex)")

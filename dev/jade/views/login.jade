section.login-page.login-page-mobView
    //---------------- LogIn Form
    #login-container.login-container.login-container-mobView(ng-hide="loginPage.isRegistration", fs-click="loginPage.isSendEmail = 0; loginPage.unexpectedError = 0; loginPage.isUserNotExist = 0; loginPage.isUserNotActive = 0; loginPage.isUserPasswordError = 0; loginPage.isOfflineImport = 0")
        .attantion(ng-hide="loginPage.isOnline || !loginPage.isOffline") {{ ::loginPage.OFFLINE }}
            button.inet_ok(fs-click="loginPage.closeOfflineAlert()") {{ ::loginPage.OK }}
        .attantion(ng-if="loginPage.isSendEmail")         {{ ::loginPage.USER_CHECK_EMAIL }}
        .attantion(ng-if="loginPage.isUserNotExist")      {{ ::loginPage.USER_NOT_EXIST }}
        .attantion(ng-if="loginPage.isUserNotActive")     {{ ::loginPage.USER_NOT_ACTIVE }}
        .attantion(ng-if="loginPage.isUserPasswordError") {{ ::loginPage.USER_PASSWORD_ERROR }}
        .attantion(ng-if="loginPage.isStartImport")       {{ ::loginPage.IMPORT_DB }}
        .attantion(ng-if="loginPage.isOfflineImport")     {{ ::loginPage.OFFLINE_IMPORT }}
        .attantion.unexpectedError(ng-if="loginPage.unexpectedError")     {{ ::loginPage.UNEXPECTED_ERROR }}
        .logo.logo-mobView
        .text-logo {{ ::loginPage.WINDOW_COST }}
        .lang(ng-click="loginPage.gotoSettingsPage()", id="jssj")

        form(name='loginForm', novalidate, ng-submit="loginPage.enterForm(loginForm)")
            .input-field(ng-class="{ 'has-error': loginPage.submitted && loginForm.phone.$error.required }")
                input.user-field(type="text", name="phone", ng-model="loginPage.user.phone", ng-pattern="loginPage.consts.REG_LOGIN", placeholder="{{ loginPage.LOGIN }}", required)
                .error-tooltip(ng-show="loginPage.submitted && loginForm.phone.$error.required") {{ ::loginPage.EMPTY_FIELD }}
                .error-tooltip(ng-show="loginPage.submitted && loginForm.phone.$error.pattern || loginForm.phone.$dirty && loginForm.phone.$error.pattern") {{ ::loginPage.WRONG_LOGIN }}


            .input-field(ng-class="{ 'has-error' : loginPage.submitted && loginForm.password.$error.required }")
                input.user-field(type="password", name="password", ng-model="loginPage.user.password", ng-pattern="loginPage.consts.REG_LOGIN", placeholder="{{ ::loginPage.PASSWORD }}", required)
                .error-tooltip(ng-show='loginPage.submitted && loginForm.password.$error.required') {{ ::loginPage.EMPTY_FIELD }}
                .error-tooltip(ng-show="loginPage.submitted && loginForm.password.$error.pattern || loginForm.password.$dirty && loginForm.password.$error.pattern") {{ ::loginPage.WRONG_LOGIN }}

            button.login-submit(type="submit") {{ ::loginPage.ENTER }}
        //#.i
          label.updateDB(fs-click="loginPage.isAutoSyncInfo = 0;")
            input#updateDBcheck(type="checkbox", name="updateDB", value="val")
            |{{ ::loginPage.AUTO_SYNCHRONIZE }}
          .attantion(ng-if="loginPage.isAutoSyncInfo", fs-click="loginPage.isAutoSyncInfo = 0;")     {{ loginPage.SYNCHRONIZE_INFO }}
          .i-info(fs-click="loginPage.isAutoSyncInfo = 1;") i

        //button.login-submit(fs-click="loginPage.switchRegistration()") {{ ::loginPage.REGISTRATION }}

        //-------------- Factory List
        .factory_box(ng-show="loginPage.isFactoryId", fs-click="loginPage.isFactoryNotSelect = 0;")
            .attantion(ng-show="loginPage.isFactoryNotSelect") {{ ::loginPage.SELECT_FACTORY }}
            button.close_dialog(type="button", fs-click="loginPage.closeFactoryDialog()")
            .factory_title {{ ::loginPage.SELECT_PRODUCER }}
            .factory_list
                table.factory_table
                    tr.factory_item(ng-repeat="factory in loginPage.factories track by $index")
                        td.factory_select
                            input.radio-field(type="radio", name="factory", ng-model="loginPage.user.factoryId", ng-value="factory.id")
                        td.factory_name {{ factory.name }}
                        td.factory_place {{ factory.location }}
            button.login-submit(fs-click="loginPage.selectFactory()") {{ ::loginPage.SELECT }}


    //------------- Registration Form
    .login-container(ng-show="loginPage.isRegistration", fs-click="loginPage.isUserExist = 0;")
        button.close_dialog(type="button", fs-click="loginPage.closeRegistration()")
        .attantion(ng-show="loginPage.isUserExist") {{ ::loginPage.USER_EXIST }}
        .logo
        form(name='registrForm', novalidate, ng-submit="loginPage.registrForm(registrForm)")

            .input-field(ng-class="{ 'has-error' : loginPage.submitted && registrForm.name.$error.required }")
                input.user-field(type="text", name="name", ng-model="loginPage.user.name", ng-pattern="loginPage.consts.REG_NAME", ng-minlength="3", placeholder="{{ ::loginPage.CLIENT_NAME }}", required)
                .error-tooltip(ng-show="loginPage.submitted && registrForm.name.$error.required") {{ ::loginPage.EMPTY_FIELD }}
                .error-tooltip(ng-show="loginPage.submitted && registrForm.name.$error.pattern || registrForm.name.$dirty && registrForm.name.$error.pattern") {{ ::loginPage.WRONG_NAME }}
                .error-tooltip(ng-show="loginPage.submitted && registrForm.name.$error.minlength || registrForm.name.$dirty && registrForm.name.$error.minlength") {{ ::loginPage.SHORT_NAME }}

            .input-field(ng-class="{ 'has-error': loginPage.submitted && registrForm.phone.$error.required }")
                input.user-field(type="text", name="phone", ng-model="loginPage.user.phone", ng-pattern="loginPage.consts.REG_LOGIN", placeholder="{{ ::loginPage.LOGIN }}", required)
                .error-tooltip(ng-show="loginPage.submitted && registrForm.phone.$error.required") {{ ::loginPage.EMPTY_FIELD }}
                .error-tooltip(ng-show="loginPage.submitted && registrForm.phone.$error.pattern || registrForm.phone.$dirty && registrForm.phone.$error.pattern") {{ ::loginPage.WRONG_LOGIN }}

            .input-field(ng-class="{ 'has-error': loginPage.submitted && registrForm.country.$error.required, 'placeholder-select': !loginPage.user.country }")
                select.user-select-field(name="country", ng-model="loginPage.user.country", ng-options="country.name for country in loginPage.G.global.locations.countries | orderBy:'name'", ng-change="loginPage.selectLocation()", required)
                    option(value='') {{ ::loginPage.SELECT_COUNTRY }}
                .error-tooltip(ng-show="loginPage.submitted && registrForm.country.$error.required") {{ ::loginPage.EMPTY_FIELD }}

            .input-field(ng-class="{ 'has-error': loginPage.submitted && registrForm.region.$error.required, 'placeholder-select': !loginPage.user.region }")
                select.user-select-field(name="region", ng-model="loginPage.user.region", ng-options="region.name for region in loginPage.G.global.locations.regions | filter: {country_id: loginPage.user.country.id}:true | orderBy:'name'", ng-change="loginPage.selectLocation()", ng-disabled="!loginPage.user.country", required)
                    option(value='') {{ ::loginPage.SELECT_REGION }}
                .error-tooltip(ng-show="loginPage.submitted && registrForm.region.$error.required") {{ ::loginPage.EMPTY_FIELD }}

            .input-field(ng-class="{ 'has-error': loginPage.submitted && registrForm.city.$error.required, 'placeholder-select': !loginPage.user.city }")
                select.user-select-field(name="city", ng-model="loginPage.user.city", ng-options="city.cityName for city in loginPage.G.global.locations.cities | filter: {regionId: loginPage.user.region.id}:true | orderBy:'cityName'", ng-change="loginPage.selectLocation()", ng-disabled="!loginPage.user.region", required)
                    option(value='') {{ ::loginPage.SELECT_CITY }}
                .error-tooltip(ng-show="loginPage.submitted && registrForm.city.$error.required") {{ ::loginPage.EMPTY_FIELD }}

            .input-field(ng-class="{ 'has-error' : loginPage.submitted && registrForm.mail.$error.required }")
                input.user-field(type="email", name="mail", ng-model="loginPage.user.mail", ng-pattern="loginPage.consts.REG_MAIL", placeholder="{{ ::loginPage.CLIENT_EMAIL }}", required)
                .error-tooltip(ng-show="loginPage.submitted && registrForm.mail.$error.required") {{ ::loginPage.EMPTY_FIELD }}
                .error-tooltip(ng-show="loginPage.submitted && registrForm.mail.$error.email") {{ ::loginPage.WRONG_EMAIL }}
                .error-tooltip(ng-show="loginPage.submitted && registrForm.mail.$error.pattern || registrForm.mail.$dirty && registrForm.mail.$error.pattern") {{ ::loginPage.WRONG_EMAIL }}

            button.login-submit(type="submit") {{ ::loginPage.REGISTRATION }}
    .backDarkView(ng-if="loginPage.isFactoryId")
    .backDarkView(ng-if="loginPage.isOffline")
include parts/_loader
//include parts/_slider
include parts/_alert

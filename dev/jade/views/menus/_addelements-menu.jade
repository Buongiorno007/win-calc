.elements-list-container(ng-controller="addElementMenuCtrl as elementsMenu", ng-class="[elementsMenu.A.aux.showAddElementsMenu, elementsMenu.A.aux.addElementsMenuStyle]")
  .elements-menu
    header.menu-header
      .tip(data-output="{{ 'add_elements_menu.TIP' | translate }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
      button.close-elements-menu(hm-tap="elementsMenu.closeAddElementsMenu()")

    .menu-lists
      ul.items-list
        li.item.empty-element(ng-class="{'active': elementsMenu.A.aux.isAddElement == false}", hm-tap="elementsMenu.chooseAddElement()")
          .value(data-output="{{ 'add_elements_menu.EMPTY_ELEMENT' | translate }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")

      ul.items-list(ng-repeat="type in elementsMenu.A.aux.addElementsList track by $index")
        .title(data-output="{{ elementsMenu.A.aux.addElementsType[$index] }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")

        li.item(ng-hide="elementsMenu.A.aux.isAddElementListView", ng-repeat="addElement in type track by $index", ng-class="{'active': elementsMenu.A.aux.isAddElement === $parent.$index+'-'+$index}", hm-tap="elementsMenu.chooseAddElement($parent.$index, $index)")
          .value(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          button.element-info

        //------ for List View
        li.item(ng-show="elementsMenu.A.aux.isAddElementListView", ng-repeat="addElement in type track by $index", ng-class="{'active': elementsMenu.A.aux.isAddElement === $parent.$index+'-'+$index}", hm-tap="elementsMenu.selectAddElementList($parent.$index, $index, $event)")
          .value(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          button.element-info

    footer.menu-footer
      .price-element(ng-show="elementsMenu.A.aux.isAddElement && elementsMenu.A.aux.currAddElementPrice")
        .price-value + {{ elementsMenu.A.aux.currAddElementPrice }} {{ elementsMenu.U.userInfo.currency }}

      .elements-tools.size-calculator(ng-class="{'active': elementsMenu.G.global.isSizeCalculator}")
        include ../parts/_size-calculator
      .elements-tools.qty-calculator(ng-class="{'active': elementsMenu.G.global.isQtyCalculator}")
        include ../parts/_qty-calculator


  .list-items(ng-show="elementsMenu.A.aux.isAddElementListView", ng-repeat="type in elementsMenu.A.aux.addElementsList track by $index")
    .list-item(ng-repeat="addElement in type track by $index")
      .aux-list-item(ng-class="{'selected': elementsMenu.A.aux.isAddElement == $parent.$index +'-'+ $index}", ng-style="elementsMenu.coordinats")
        .aux-list-row
          .aux-name
            .aux-title {{ addElement.elementName }}
            .aux-label {{ 'add_elements.NAME_LABEL' | translate }}
          .aux-params(ng-if="addElement.elementQty")
            //button.aux-params-but.aux_big_but(hm-tap="global.initAddElementTools(1, $index)") {{ addElement.elementQty }}
            button.aux-params-but.aux_big_but {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-params(ng-if="addElement.elementWidth")
            //button.aux-params-but.aux_big_but(hm-tap="global.initAddElementTools(2, $index)") {{ addElement.elementWidth }}
            button.aux-params-but.aux_big_but {{ addElement.elementWidth }}
            .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
          .aux-params(ng-if="addElement.elementHeight")
            button.aux-params-but.aux_big_but {{ addElement.elementHeight }}
            .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}

          .aux-price +{{ addElement.elementPriceDis }} {{ elementsMenu.U.userInfo.currency }}
          button.aux-choose-but(hm-tap="elementsMenu.chooseAddElementList($parent.$index, $index)") {{ 'add_elements.ADD' | translate }}



  // Tabs Grids
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 1")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[0].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[0].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[0].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[0].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[0] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '1-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_connect_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(1, $index)")


  // Tabs Visors
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 2")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[1].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[1].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[1].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[1].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[1] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '2-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_big_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '2-2-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_big_but(hm-tap="elementsMenu.initAddElementTools(2, $index)", ng-disabled="elementsMenu.G.global.isSizeCalculator") {{ addElement.elementWidth }}
            .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(2, $index)")



  // Tabs Spillways
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 3")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[2].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[2].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[2].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[2].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[2] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '3-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_middle_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '3-2-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_middle_but(hm-tap="elementsMenu.initAddElementTools(2, $index)", ng-disabled="elementsMenu.G.global.isSizeCalculator") {{ addElement.elementWidth }}
            .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(3, $index)")



  // Tabs OutsideSlope
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 4")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[3].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[3].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[3].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[3].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[3] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '4-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_slope_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '4-2-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_slope_but(hm-tap="elementsMenu.initAddElementTools(2, $index)", ng-disabled="elementsMenu.G.global.isSizeCalculator") {{ addElement.elementWidth }}
            .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(4, $index)")


  // Tabs Louvers
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 5")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[4].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[4].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[4].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[4].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[4] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '5-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_middle_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '5-2-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_middle_but(hm-tap="elementsMenu.initAddElementTools(2, $index)", ng-disabled="elementsMenu.G.global.isSizeCalculator") {{ addElement.elementWidth }}
            .aux-label {{ 'add_elements.WIDTH_LABEL' | translate }}
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '5-3-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_middle_but(hm-tap="elementsMenu.initAddElementTools(3, $index)", ng-disabled="elementsMenu.G.global.isSizeCalculator") {{ addElement.elementHeight }}
            .aux-label {{ 'add_elements.HEIGHT_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(5, $index)")



  // Tabs InsideSlope
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 6")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[5].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[5].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[5].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[5].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[5] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '6-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_slope_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '6-2-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_slope_but(hm-tap="elementsMenu.initAddElementTools(2, $index)", ng-disabled="elementsMenu.G.global.isSizeCalculator") {{ addElement.elementWidth }}
            .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(6, $index)")


  // Tabs Connectors
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 7")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[6].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[6].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[6].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[6].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[6] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '7-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_connect_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '7-2-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_connect_but(hm-tap="elementsMenu.initAddElementTools(2, $index)", ng-disabled="elementsMenu.G.global.isSizeCalculator") {{ addElement.elementWidth }}
            .aux-label {{ 'add_elements.SIZE_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(7, $index)")




  // Tabs Fans
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 8")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[7].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[7].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[7].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[7].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[7] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '8-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_small_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(8, $index)")



  // Tabs WindowSill
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 9")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[8].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[8].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[8].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[8].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[8] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '9-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_big_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '9-2-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_big_but(hm-tap="elementsMenu.initAddElementTools(2, $index)", ng-disabled="elementsMenu.G.global.isSizeCalculator") {{ addElement.elementWidth }}
            .aux-label {{ 'add_elements.WIDTH_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(9, $index)")



  // Tabs Handles
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 10")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[9].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[9].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[9].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[9].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[9] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '10-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_middle_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(10, $index)")



  // Tabs Others
  .menu-right-tabs(ng-if="elementsMenu.A.aux.isFocusedAddElement === 11")
    .tab-block.simple-frame
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[10].length == 1}") {{ 'add_elements_menu.TAB_NAME_SIMPLE_FRAME' | translate }}
    .tab-block.hard-frame(ng-class="{'active': elementsMenu.A.aux.isTabFrame}")
      button.frame-tab(ng-class="{'active': elementsMenu.P.product.chosenAddElements[10].length > 1}", hm-tap="elementsMenu.showFrameTabs()") {{ 'add_elements_menu.TAB_NAME_HARD_FRAME' | translate }}
      .tab-content-empty(ng-if="elementsMenu.P.product.chosenAddElements[10].length === 0")
        .tab-empty {{ 'add_elements_menu.TAB_EMPTY_EXPLAIN' | translate }}
      .tab-content(ng-if="elementsMenu.P.product.chosenAddElements[10].length > 0")
        .tab-aux-row(ng-repeat="addElement in elementsMenu.P.product.chosenAddElements[10] track by $index")
          .aux-title(data-output="{{ addElement.elementName }}", typing="{{ elementsMenu.config.typing }}", typing-delay="{{ elementsMenu.config.DELAY_START }}")
          .aux-params(ng-class="{'selected': elementsMenu.A.aux.auxParameter === '11-1-'+$index && elementsMenu.A.aux.currentAddElementId === $index}")
            button.aux-params-but.aux_small_but(hm-tap="elementsMenu.initAddElementTools(1, $index)", ng-disabled="elementsMenu.G.global.isQtyCalculator") {{ addElement.elementQty }}
            .aux-label {{ 'add_elements.QTY_LABEL' | translate }}
          .aux-delete(hm-tap="elementsMenu.deleteAddElement(11, $index)")
section.page-container.light-v(ng-class="{ 'swiped': !lightPage.G.global.isNavMenu }")
  section.left-side
    include menus/_navigation-menu
  section.right-side(ng-class="{'main-page-bg': lightPage.G.global.currOpenPage === 'light', 'main-room-bg': lightPage.G.global.currOpenPage === 'light'}")
    section.main-content(tabindex="0",ng-controller="DesignCtrl as designPage")
      .design(ng-if="lightPage.G.global.showCart == 0")
        .user-info-container(ng-controller="UserInfoCtrl as userBox",  ng-swipe-left="userBox.swipeLeft($event)", ng-swipe-right="userBox.swipeRight($event)")
          button.nav-menu-btn(ng-class="{ 'show-navmenu': userBox.G.global.isNavMenu , 'orange-navmenu-btn': (userBox.G.global.isOpenedHistoryPage || userBox.G.global.isOpenedlightPage)}", fs-click="userBox.swipeMainPage($event)")
        svg-template(template="lightPage.D.design.templateTEMP", template-width="lightPage.constants.svgTemplateWidth", template-height="lightPage.constants.svgTemplateHeight", type-construction="lightPage.constants.SVG_ID_EDIT")
        .right-menu-header
          .nav-tool-box(ng-if="designPage.D.design.designSteps.length > 0")
            button.construct-tools.step-back(ng-click="designPage.stepBack()")
            .nav-tool-label {{ ::designPage.BACK }}
        .counter-block
          .counter
            .input-minus(ng-click="lightPage.subtractProdQty()") -
            input(type="number", min="1", ng-model="lightPage.G.global.product_qty")
            .input-plus(ng-click="lightPage.addProdQty()") +
          //.save-block(ng-click="lightPage.saveProduct()")
          .save-block(ng-click="lightPage.saveProduct()")
            .cart-img
            .cart-btn {{lightPage.SAVE}}
        include panels/_templates
        .right-menu-footer
          .calculators-box.size-calculator(ng-class="{'active': designPage.G.global.isSizeCalculator}")
            include parts/_size-calculator
      .cart



      include parts/_report
      include panels/_profiles
      //include panels/_glasses
      include panels/_hardwares
      include panels/_laminations
      //include panels/_add-elements
      //include panels/_add-elements-list
      //include parts/_grid-selector
    section.right-menu
      .config-menu(ng-controller="ConfigMenuCtrl as configMenu")
        include menus/_addelems-menu
        .config-buttons
          .karkas-button(ng-click="configMenu.G.global.showKarkas=1;configMenu.G.global.showConfiguration=0;configMenu.G.global.showCart=0", ng-class="{'active': configMenu.G.global.showKarkas == 1}")
            .img-karkas(ng-class="{'active': configMenu.G.global.showKarkas == 1}")
            p {{lightPage.KARKAS}}
          .configuration-button(ng-click="configMenu.G.global.showKarkas=0; configMenu.G.global.showConfiguration=1;configMenu.G.global.showCart=0", ng-class="{'active': configMenu.G.global.showConfiguration == 1}")
            .img-configuration(ng-class="{'active': configMenu.G.global.showConfiguration == 1}")
            p {{lightPage.KONFIG}}.
          .cart-button(ng-click="configMenu.G.global.showKarkas=0;configMenu.G.global.showConfiguration=0;configMenu.G.global.showCart=1", ng-class="{'active': configMenu.G.global.showCart == 1}")
            .order-qty-menu(ng-class="{'active': configMenu.G.global.showCart == 1}")
              p {{ configMenu.O.order.products.length }}
            .img-cart(ng-class="{'active': configMenu.G.global.showCart == 1}")
            p {{lightPage.CART}}
        //.karkas(ng-controller="DesignCtrl as designPage", ng-if="configMenu.G.global.showKarkas")
        .karkas(ng-controller="DesignCtrl as designPage", ng-show="configMenu.G.global.showKarkas")
          .construction-left-menu
            ul.figure-lists
              li.figure-item(ng-click="designPage.selectMenuItem(3)",ng-class="{'selected': designPage.D.design.activeMenuItem == 3, 'hov': designPage.D.design.activeMenuItem !== 3}")
                .figure-item-block(ng-class="{'selected': designPage.D.design.activeMenuItem == 3, 'hov': designPage.D.design.activeMenuItem !== 3}")
                  .figure-icon-top.impost-shape-a
                  .figure-icon-bottom.impost-shape-b
                .figure-label(data-output="{{ ::designPage.IMPOST_SHAPE }}", typing="{{ designPage.config.typing }}", typing-delay="{{ designPage.config.DELAY_SHOW_FIGURE_ITEM }}")

              li.figure-item(ng-click="designPage.selectMenuItem(1)",ng-class="{'selected': designPage.D.design.activeMenuItem == 1, 'hov': designPage.D.design.activeMenuItem !== 1}")
                .figure-item-block(ng-class="{'selected': designPage.D.design.activeMenuItem == 1, 'hov': designPage.D.design.activeMenuItem !== 1}")
                  .figure-icon-top.sash-shape-a
                  .figure-icon-bottom.sash-shape-b
                .figure-label(data-output="{{ ::designPage.SASH_SHAPE }}", typing="{{ designPage.config.typing }}", typing-delay="{{ designPage.config.DELAY_SHOW_FIGURE_ITEM }}")

              li.figure-item(ng-click="designPage.selectMenuItem(2)",ng-class="{'selected': designPage.D.design.activeMenuItem == 2, 'hov': designPage.D.design.activeMenuItem !== 2}")
                .figure-item-block(ng-class="{'selected': designPage.D.design.activeMenuItem == 2, 'hov': designPage.D.design.activeMenuItem !== 2}")
                  .figure-icon-top.angel-shape-a
                  .figure-icon-bottom.angel-shape-b
                .figure-label(data-output="{{ ::designPage.ANGEL_SHAPE }}", typing="{{ designPage.config.typing }}", typing-delay="{{ designPage.config.DELAY_SHOW_FIGURE_ITEM }}")

              li.figure-item(ng-click="designPage.selectMenuItem(4)",ng-class="{'selected': designPage.D.design.activeMenuItem == 4, 'hov': designPage.D.design.activeMenuItem !== 4}")
                .figure-item-block(ng-class="{'selected': designPage.D.design.activeMenuItem == 4, 'hov': designPage.D.design.activeMenuItem !== 4}")
                  .figure-icon-top.arch-shape-a
                  .figure-icon-bottom.arch-shape-b
                .figure-label(data-output="{{ ::designPage.ARCH_SHAPE }}", typing="{{ designPage.config.typing }}", typing-delay="{{ designPage.config.DELAY_SHOW_FIGURE_ITEM }}")

              li.figure-item(ng-click="designPage.selectMenuItem(5)",ng-class="{'selected': designPage.D.design.activeMenuItem == 5, 'hov': designPage.D.design.activeMenuItem !== 5}")
                .figure-item-block(ng-class="{'selected': designPage.D.design.activeMenuItem == 5, 'hov': designPage.D.design.activeMenuItem !== 5}")
                  .figure-icon-top.position-shape-a
                  .figure-icon-bottom.position-shape-b
                .figure-label(data-output="{{ ::designPage.POSITION_SHAPE }}", typing="{{ designPage.config.typing }}", typing-delay="{{ designPage.config.DELAY_SHOW_FIGURE_ITEM }}")
            #impost-shape-menu.edit_submenu(ng-class="{'active': designPage.D.design.activeSubMenuItem == 3}")
              .constr-shape-icon.impost-vert(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(2)")
              .constr-shape-icon.impost-hor(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(3)")
              .constr-shape-icon.impost-inc-hor(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(4)")
              .drop-shape-icon.impost-inc-hor2(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(5)", ng-class="{'active': designPage.D.design.isDropSubMenu == 4}")
              .drop-shape-icon.impost-inc-vert(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(6)", ng-class="{'active': designPage.D.design.isDropSubMenu == 4}")
              .drop-shape-icon.impost-inc-vert2(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(7)", ng-class="{'active': designPage.D.design.isDropSubMenu == 4}")
              .constr-shape-icon.impost-curv-right(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(8)")
              .drop-shape-icon.impost-curv-left(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(9)", ng-class="{'active': designPage.D.design.isDropSubMenu == 8}")
              .drop-shape-icon.impost-curv-up(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(10)", ng-class="{'active': designPage.D.design.isDropSubMenu == 8}")
              .drop-shape-icon.impost-curv-down(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(11)", ng-class="{'active': designPage.D.design.isDropSubMenu == 8}")
              .constr-shape-icon.impost-curv1(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(12)")
              .drop-shape-icon.impost-curv3(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(13)", ng-class="{'active': designPage.D.design.isDropSubMenu == 12}")
              //.constr-shape-icon.impost-curv4(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(14)")
              //.constr-shape-icon.impost-curv2(ng-hide="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(15)")
              .constr-shape-icon.clean(ng-show="designPage.D.design.isImpostDelete", ng-click="designPage.insertImpost(1)")

            #sash-shape-menu.edit_submenu(ng-class="{'active': designPage.D.design.activeSubMenuItem == 1}")
              .constr-shape-icon.sash-left(ng-click="designPage.insertSash(2)")
              .drop-shape-icon.sash-right(ng-click="designPage.insertSash(3)", ng-class="{'active': designPage.D.design.isDropSubMenu == 2}")
              .drop-shape-icon.sash-up(ng-click="designPage.insertSash(4)", ng-hide="designPage.P.product.construction_type === 4", ng-class="{'active': designPage.D.design.isDropSubMenu == 2}")
              .drop-shape-icon.sash-down(ng-click="designPage.insertSash(5)", ng-hide="designPage.P.product.construction_type === 4", ng-class="{'active': designPage.D.design.isDropSubMenu == 2}")
              .constr-shape-icon.sash-right-up(ng-click="designPage.insertSash(6)", ng-hide="designPage.P.product.construction_type === 4")
              .drop-shape-icon.sash-left-up(ng-click="designPage.insertSash(7)", ng-class="{'active': designPage.D.design.isDropSubMenu == 6}", ng-hide="designPage.P.product.construction_type === 4")
              .constr-shape-icon(ng-click="designPage.insertSash(8)", ng-class="(designPage.P.product.construction_type === 4) ? 'sash-shtulp-left-door' : 'sash-shtulp-left'")
              .drop-shape-icon.sash-shtulp-right(ng-click="designPage.insertSash(9)", ng-class="[ (designPage.P.product.construction_type === 4) ? 'sash-shtulp-right-door' : 'sash-shtulp-right' , {'active': designPage.D.design.isDropSubMenu == 8, 'left': designPage.P.product.construction_type === 4}]")
              .constr-shape-icon.clean(ng-click="designPage.insertSash(1)")

            #angel-shape-menu.edit_submenu(ng-class="{'active': designPage.D.design.activeSubMenuItem == 2}")
              .constr-shape-icon.corner(ng-click="designPage.insertCorner(2)")
              .constr-shape-icon.corner-curv(ng-click="designPage.insertCorner(3)")
              .constr-shape-icon.clean(ng-click="designPage.insertCorner(1)")

            #arc-shape-menu.edit_submenu(ng-class="{'active': designPage.D.design.activeSubMenuItem == 4}")
              .constr-shape-icon.arc(ng-click="designPage.insertArc(2)")
              .constr-shape-icon.clean(ng-click="designPage.insertArc(1)")

            #position-menu-for-position.edit_submenu(ng-hide="designPage.P.product.construction_type === 4", ng-class="{'active': designPage.D.design.activeSubMenuItem == 5}")
              //- .constr-shape-icon.mirror(ng-click="designPage.initMirror()")
              .constr-shape-position(ng-click="designPage.positionAxis()") {{::designPage.BY_AXIS}}
              .constr-shape-position(ng-click="designPage.positionGlass()") {{::designPage.BY_GLASS}}

        //.configuration( ng-if="configMenu.G.global.showConfiguration")
        .configuration(ng-show="configMenu.G.global.showConfiguration")
          ul.items-list.unvisible(ng-if="configMenu.G.global.isConfigMenu", show-delay="{{ configMenu.config.DELAY_SHOW_CONFIG_LIST }}")
            li.item(ng-class="{'active': configMenu.G.global.activePanel == 2, 'hov': configMenu.G.global.activePanel !== 2}", fs-click="configMenu.selectConfigPanel(2)")
              .title(data-output="{{ ::configMenu.CONFIGMENU_PROFILE }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .value(ng-if="configMenu.P.product.construction_type !== 4", data-output="{{ configMenu.P.product.profile.name }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .value(ng-if="configMenu.P.product.construction_type === 4") {{ configMenu.P.product.doorName | translate }}
              .value(ng-if="configMenu.P.product.construction_type === 4") {{ configMenu.P.product.doorSashName }}

            li.item(ng-class="{'active': configMenu.G.global.activePanel == 3, 'hov': configMenu.G.global.activePanel !== 3}", fs-click="configMenu.selectConfigPanel(3)")
              .title(data-output="{{ ::configMenu.CONFIGMENU_GLASS }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .value(ng-if="configMenu.P.product.glass.length == 1", data-output="{{ configMenu.P.product.glass[0].sku }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .value(ng-if="configMenu.P.product.glass.length == 2", data-output="{{ configMenu.P.product.glass[0].sku +', '+ configMenu.P.product.glass[1].sku }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .value(ng-if="configMenu.P.product.glass.length > 2", data-output="{{ configMenu.P.product.glass[0].sku +', '+ configMenu.P.product.glass[1].sku +', '+ configMenu.P.product.glass[2].sku }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")

            li.item(ng-class="{'active': configMenu.G.global.activePanel == 4, 'hov': configMenu.G.global.activePanel !== 4}", fs-click="configMenu.selectConfigPanel(4)")
              .title(data-output="{{ ::configMenu.CONFIGMENU_HARDWARE }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .value(ng-if="configMenu.P.product.construction_type !== 4", data-output="{{ configMenu.P.product.hardware.name }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .value(ng-if="configMenu.P.product.construction_type === 4") {{ configMenu.P.product.doorHandle.name }}
              .value(ng-if="configMenu.P.product.construction_type === 4") {{ configMenu.P.product.doorLock.name }}

            li.item(ng-class="{'active': configMenu.G.global.activePanel == 5, 'hov': configMenu.G.global.activePanel !== 5}", fs-click="configMenu.selectConfigPanel(5)")
              .title(data-output="{{ ::configMenu.CONFIGMENU_LAMINATION }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .name(data-output="{{ ::configMenu.CONFIGMENU_LAMINATION_TYPE }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .value(data-output="{{ configMenu.P.product.lamination.laminat_in_name | translate}} / {{ configMenu.P.product.lamination.laminat_out_name | translate}}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")

            li.item(ng-class="{'active': configMenu.G.global.activePanel == 6, 'hov': configMenu.G.global.activePanel !== 6}", fs-click="configMenu.selectConfigPanel(6)")
              .title(data-output="{{ ::configMenu.CONFIGMENU_ADDITIONAL }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .name(ng-hide="configMenu.P.product.addelem_price > 0", data-output="{{ ::configMenu.CONFIGMENU_NO_ADDELEMENTS }}", typing="{{ configMenu.config.typing }}", typing-delay="{{ configMenu.config.DELAY_TYPE_ITEM_TITLE }}")
              .additional-items-list
                ul.additional-items-group(ng-repeat="addElementGroup in configMenu.P.product.chosenAddElements")
                  li.additional-item(ng-repeat="addElement in addElementGroup")
                    span.value(data-output="") {{ addElement.name }}
        .cart-menu(ng-show="configMenu.G.global.showCart", ng-controller="CartMenuCtrl as cartMenu")
          ul.items-list
            li.item(ng-class="{'active': cartMenu.config.activeMenuItem == 1, 'hov': cartMenu.config.activeMenuItem !== 1}", fs-click="cartMenu.selectMenuItem(1)")
              .title(data-output="{{ ::cartMenu.DELIVERY }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
              .cart-item-data
                .value(ng-show="!cartMenu.O.order.floor_id", data-output="{{ ::cartMenu.SELF_EXPORT }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
                .value(ng-show="cartMenu.O.order.floor_id", data-output="{{ cartMenu.O.order.floorName }} {{ ::cartMenu.FLOOR }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
                span.name.aside(ng-show="cartMenu.O.order.floor_id", data-output=" + {{ cartMenu.O.order.floor_price }} {{ cartMenu.U.userInfo.currency }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
            .dropdown-cart-menu.drop-delivery(ng-class="{'active': cartMenu.config.activeMenuItem == 1 && cartMenu.G.global.supplyData.length}")
              ul.dropdown-items-list
                li.dropdown-item(ng-class="{'selected': !cartMenu.O.order.floor_id}", fs-click="cartMenu.selectFloorPrice(0)")
                  .dropdown-item-inner
                    .value.drop-txt {{ ::cartMenu.SELF_EXPORT }}
                    .name.drop-txt
                li.dropdown-item(ng-repeat="supplyList in cartMenu.G.global.supplyData", ng-class="{'selected': supplyList.id == cartMenu.O.order.floor_id}", fs-click="cartMenu.selectFloorPrice(supplyList)")
                  .dropdown-item-inner
                    .value.drop-txt {{supplyList.name}} {{ ::cartMenu.FLOOR }}
                    .name.drop-txt + {{supplyList.priceReal}} {{ cartMenu.U.userInfo.currency }}

            li.item(ng-class="{'active': cartMenu.config.activeMenuItem == 2, 'hov': cartMenu.config.activeMenuItem !== 2}", fs-click="cartMenu.selectMenuItem(2)")
              .title(data-output="{{ ::cartMenu.ASSEMBLING }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
              .cart-item-data
                .value(ng-show="!cartMenu.O.order.mounting_id", data-output="{{ ::cartMenu.WITHOUT_ASSEMBLING }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
                .value(ng-show="cartMenu.O.order.mounting_id", data-output="{{ cartMenu.O.order.mountingName }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
                span.name.aside(ng-show="cartMenu.O.order.mounting_id", data-output=" + {{ cartMenu.O.order.mounting_price }} {{ cartMenu.U.userInfo.currency }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
            .dropdown-cart-menu.drop-assembling(ng-class="{'active': cartMenu.config.activeMenuItem == 2 && cartMenu.G.global.assemblingData.length}")
              ul.dropdown-items-list
                li.dropdown-item(ng-class="{'selected': !cartMenu.O.order.mounting_id}", fs-click="cartMenu.selectAssembling(0)")
                  .dropdown-item-inner
                    .value.drop-txt {{ ::cartMenu.WITHOUT_ASSEMBLING }}
                    .name.drop-txt {{ ::cartMenu.FREE }}
                li.dropdown-item(ng-repeat="assemb in cartMenu.G.global.assemblingData", ng-class="{'selected': assemb.id == cartMenu.O.order.mounting_id}", fs-click="cartMenu.selectAssembling(assemb)")
                  .dropdown-item-inner
                    .value.drop-txt {{ assemb.name }}
                    .name.drop-txt + {{ assemb.priceReal }} {{ cartMenu.U.userInfo.currency }}


            li.item.switcher(ng-class="{'active': cartMenu.config.activeMenuItem == 3, 'hov': cartMenu.config.activeMenuItem !== 3}", fs-click="cartMenu.selectMenuItem(3)")
              .title(data-output="{{ ::cartMenu.PAYMENT_BY_INSTALMENTS }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
              .cart-item-data
                .value(ng-if="!cartMenu.O.order.is_instalment", data-output="{{ ::cartMenu.WITHOUT_INSTALMENTS }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
                .value(ng-if="cartMenu.O.order.is_instalment") {{ cartMenu.O.order.selectedInstalmentPeriod }}
                  ng-pluralize(count="cartMenu.O.order.selectedInstalmentPeriod",
                  when="{'1': '{{ cartMenu.config.month }}', '2': '{{ cartMenu.config.montha }}', '3': '{{ cartMenu.config.montha }}', '4': '{{ cartMenu.config.montha }}', 'other': '{{ cartMenu.config.months }}'}")
                span.name.aside(ng-if="cartMenu.O.order.is_instalment", data-output="{{ cartMenu.O.order.selectedInstalmentPercent }} %", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
              .check-switcher(ng-class="{'active': cartMenu.O.order.is_instalment }", fs-click="cartMenu.closeInstalment()")
                .check-bg-active
                .check-bg-passive
              .check-handle(ng-class="{'active': cartMenu.O.order.is_instalment }", fs-click="cartMenu.closeInstalment()")
            .dropdown-cart-menu.drop-instalment(ng-class="{'active': cartMenu.config.activeMenuItem == 3}")
              ul.dropdown-items-list
                li.dropdown-item(ng-repeat="payment in cartMenu.G.global.instalmentsData", ng-class="{'selected': payment.id == cartMenu.O.order.instalment_id}", fs-click="cartMenu.selectInstalment(payment.id, payment.name, payment.value)")
                  .dropdown-item-inner
                    .value {{ payment.name }}
                      ng-pluralize(count="payment.name",
                      when="{'1': '{{ cartMenu.config.month }}', '2': '{{ cartMenu.config.montha }}', '3': '{{ cartMenu.config.montha }}', '4': '{{ cartMenu.config.montha }}', 'other': '{{ cartMenu.config.months }}'}")
                    .value.value-percent {{ payment.value }} %


            li.item(ng-class="{'active': cartMenu.config.activeMenuItem == 4, 'hov': cartMenu.config.activeMenuItem !== 4}", fs-click="cartMenu.selectMenuItem(4)")
              .title(data-output="{{ ::cartMenu.DELIVERY_DATE }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
              .value(data-output="{{cartMenu.O.order.new_delivery_date | date:'dd.MM.yyyy'}}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
            .dropdown-cart-menu.drop-calendar(ng-class="{'active': cartMenu.config.activeMenuItem == 4}")
              calendar.calendar-box
            .calendar-prices
              .calendar-price.up(ng-show="cartMenu.O.order.is_date_price_more") + {{ cartMenu.O.order.delivery_price }} {{ cartMenu.U.userInfo.currency }}
              .calendar-price.down(ng-show="cartMenu.O.order.is_date_price_less") - {{ cartMenu.O.order.delivery_price }} {{ cartMenu.U.userInfo.currency }}

            li.item(ng-class="{'active': cartMenu.config.activeMenuItem == 5, 'hov': cartMenu.config.activeMenuItem !== 5}", fs-click="cartMenu.selectMenuItem(5)")
              .title(data-output="{{ ::cartMenu.COMMENT }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
              .cart-item-data
              .value(data-output="{{ cartMenu.O.order.comment }}", typing="{{ cartMenu.config.typing }}", typing-delay="{{ cartMenu.config.DELAY_START }}")
            .dropdown-cart-menu.drop-calendar(ng-class="{'active': cartMenu.config.activeMenuItem == 5}")
              textarea.comment-field.noPreventDefault(ng-model="cartMenu.O.order.comment")

          footer.menu-footer
            .price-block.price-with-instalments(ng-class="{'active': cartMenu.O.order.is_instalment}", fs-click="cartMenu.swipeDiscountBlock()")
              .name {{ ::cartMenu.FIRST_PAYMENT_LABEL }} {{ cartMenu.O.order.selectedInstalmentPercent }} %
              .name {{ ::cartMenu.DATE_DELIVERY_LABEL }} {{cartMenu.O.order.new_delivery_date | date:"dd.MM.yyyy"}}
              price(price-value="cartMenu.O.order.paymentFirstDis", price-currency="cartMenu.U.userInfo.currency")
              .name {{ cartMenu.O.order.selectedInstalmentPeriod }} {{ ::cartMenu.MONTHLY_PAYMENT_LABEL }}
              price(price-value="cartMenu.O.order.paymentMonthlyDis", price-currency="cartMenu.U.userInfo.currency")
            .price-block.price-without-instalments(ng-class="{'active': !cartMenu.O.order.is_instalment}", fs-click="cartMenu.swipeDiscountBlock()")
              .name {{ ::cartMenu.TOTAL_PRICE_LABEL }} {{cartMenu.O.order.new_delivery_date | date:"dd.MM.yyyy"}}
              price(price-value="cartMenu.O.order.order_price_dis", price-currency="cartMenu.U.userInfo.currency")
            button.order-btn(ng-click="cartMenu.openMasterDialog()") {{ cartMenu.CALCULATE_PRICE }}
            button.measure-btn(ng-click="cartMenu.openOrderDialog()") {{ cartMenu.ORDER_LV }}

        .product-u-coeff(ng-if="configMenu.G.global.isConfigMenu && configMenu.U.userInfo.therm_coeff_id && configMenu.G.global.showCart == 0", ng-class="{'coeff-low': configMenu.P.product.heat_coef_total < configMenu.O.order.heat_coef_min}", show-delay="{{ configMenu.config.DELAY_SHOW_U_COEFF }}")
          div R = {{ configMenu.P.product.heat_coef_total }} {{ ::configMenu.LETTER_M}}&sup2;&deg;C/{{::configMenu.HEATCOEF_VAL }}
        .product-u-coeff(ng-if="configMenu.G.global.isConfigMenu && !configMenu.U.userInfo.therm_coeff_id", ng-class="{'coeff-low': configMenu.P.product.heat_coef_total > configMenu.O.order.heat_coef_min}", show-delay="{{ configMenu.config.DELAY_SHOW_U_COEFF }}")
          div U = {{ configMenu.P.product.heat_coef_total }}{{ ::configMenu.HEATCOEF_VAL}}/{{::configMenu.LETTER_M}}&sup2;&deg;C
  section.order-forms(ng-controller="OrderFormCtrl as orderForm")
    include parts/_form-master
    include parts/_form-order
    include parts/_form-credit
  include parts/_info-box
  include parts/_attantions
  include parts/_loader
  include parts/_alert
  include parts/_danger-alert
  include parts/_error-product